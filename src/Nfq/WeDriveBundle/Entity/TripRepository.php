<?php

namespace Nfq\WeDriveBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityRepository;
use Nfq\UserBundle\Entity\User;
use Nfq\WeDriveBundle\Constants\PassengerState;

/**
 * TripRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TripRepository extends EntityRepository
{


    public function getUserTrips(User $user)
    {
        $em = $this->getEntityManager();

        $parameters = array(
            'userId' => $user->getId(),
            'departureTime' => date('Y-m-d H:i:s')
        );

        $query = $em->createQuery(
            "
                            SELECT t
                            FROM Nfq\WeDriveBundle\Entity\Trip t
                            JOIN t.route r
                            WHERE r.user = :userId
                            AND t.departureTime > :departureTime
                            ORDER BY t.departureTime ASC
                        "
        )->setParameters($parameters);

        $trips = $query->getResult();

        if (!$trips) {
//            throw $this->createNotFoundException(
//                'No trips found'
//            );
        }

        return $trips;
    }

    /**
     * getOtherTrips
     *
     * @param User $user
     * @return ArrayCollection|Trip[]
     */
    public function getOtherTrips(User $user)
    {

        $em = $this->getEntityManager();

        $query = $em->createQuery(
            "
                            SELECT t
                            FROM Nfq\WeDriveBundle\Entity\Trip t
                            JOIN t.route r
                            WHERE r.user != :userId
                            AND t.departureTime > :departureTime
                            ORDER BY t.departureTime
                        "
        )->setParameters(
                array(
                    'userId' => $user->getId(),
                    'departureTime' => date('Y-m-d H:i:s')
                )
            );

        $trips = $query->getResult();
//        if (!$trips) {
//            throw $this->createNotFoundException(
//                'No trips found'
//            );
//        }

        return $trips;
    }

    /**
     * getJoinedPassengersCount
     *
     * @param Trip trip
     * @return Integer
     */
    public function getJoinedPassengersCount($trip)
    {
        $em = $this->getEntityManager();

        $query = $em->createQuery(
            "
                            SELECT count(p)
                            FROM Nfq\WeDriveBundle\Entity\Passenger p
                            JOIN p.trip t
                            WHERE t.id = :tripId and
                            (p.accepted = :state1 or p.accepted = :state2)
                        "
        )->setParameters(array('tripId'=>$trip->getId(),
                        'state1'=>PassengerState::ST_JOINED,
                        'state2'=>PassengerState::ST_JOINED_DRIVER_ACCEPTED));

        $pCount = $query->getSingleScalarResult();

        return $pCount;
    }
}
