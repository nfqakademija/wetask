<?php

namespace Nfq\WeDriveBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Nfq\UserBundle\Entity\User;
use Nfq\WeDriveBundle\Constants\PassengerState;

/**
 * PassengerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PassengerRepository extends EntityRepository
{
    /**
     * @param User $user
     * @param int $hoursInterval
     * @return array|Passenger[]
     */
    public function getPassengersWithRequest(User $user, $hoursInterval = 5)
    {
        //prepare time for query
        $fromDate = date("Y-m-d H:i:s");
        $toDate = date("Y-m-d H:i:s", strtotime("+{$hoursInterval} hours"));

        $em = $this->getEntityManager();

        $query = $em->createQuery(
            "
                            SELECT p
                            FROM Nfq\WeDriveBundle\Entity\Passenger p
                            JOIN p.trip t
                            JOIN t.route r
                            WHERE r.user = :user_id
                            and (p.accepted = :state1 or p.accepted = :state2)
                            and t.departureTime >:fromDate
                            and t.departureTime <:toDate
                            ORDER BY p.accepted"
        )->setParameters(
                array(
                    'user_id' => $user->getId(),
                    'fromDate' => $fromDate,
                    'toDate' => $toDate,
                    'state1' => PassengerState::ST_JOINED,
                    'state2' => PassengerState::ST_CANCELED_BY_PASSENGER
                )
            );

        $passengers = $query->getResult();

        return $passengers;
    }

    /**
     * @param User $user
     * @param int $hoursInterval = 5
     * @return array|Passenger[]
     */
    public function getUserAsPassengerListWithRequest(User $user, $hoursInterval = 5)
    {
        //prepare time for query
        $fromDate = date("Y-m-d H:i:s");
        $toDate = date("Y-m-d H:i:s", strtotime("+{$hoursInterval} hours"));

        $em = $this->getEntityManager();

        $query = $em->createQuery(
            "
                            SELECT p
                            FROM Nfq\WeDriveBundle\Entity\Passenger p
                            JOIN p.trip t
                            WHERE p.user = :user_id
                            and (p.accepted = :state1 or p.accepted = :state2)
                            and t.departureTime >:fromDate
                            and t.departureTime <:toDate
                            ORDER BY p.accepted"
        )->setParameters(
                array(
                    'user_id' => $user->getId(),
                    'fromDate' => $fromDate,
                    'toDate' => $toDate,
                    'state1' => PassengerState::ST_CANCELED_BY_DRIVER,
                    'state2' => PassengerState::ST_REJECTED_BY_DRIVER
                )
            );

        $passengers = $query->getResult();

        return $passengers;
    }
}
